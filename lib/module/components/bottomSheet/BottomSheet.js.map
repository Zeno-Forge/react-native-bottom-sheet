{"version":3,"sources":["BottomSheet.tsx"],"names":["React","useMemo","useCallback","forwardRef","useImperativeHandle","memo","useEffect","Platform","invariant","Animated","useAnimatedReaction","useSharedValue","useAnimatedStyle","useDerivedValue","runOnJS","interpolate","Extrapolate","runOnUI","cancelAnimation","useWorkletCallback","ReduceMotion","State","useScrollable","usePropsValidator","useReactiveSharedValue","useNormalizedSnapPoints","useKeyboard","BottomSheetInternalProvider","BottomSheetProvider","BottomSheetContainer","BottomSheetGestureHandlersProvider","BottomSheetBackdropContainer","BottomSheetHandleContainer","BottomSheetBackgroundContainer","BottomSheetFooterContainer","BottomSheetDraggableView","ANIMATION_STATE","KEYBOARD_STATE","KEYBOARD_BEHAVIOR","SHEET_STATE","SCROLLABLE_STATE","KEYBOARD_BLUR_BEHAVIOR","KEYBOARD_INPUT_MODE","ANIMATION_SOURCE","animate","getKeyboardAnimationConfigs","normalizeSnapPoint","print","DEFAULT_OVER_DRAG_RESISTANCE_FACTOR","DEFAULT_ENABLE_CONTENT_PANNING_GESTURE","DEFAULT_ENABLE_HANDLE_PANNING_GESTURE","DEFAULT_ENABLE_OVER_DRAG","DEFAULT_ANIMATE_ON_MOUNT","DEFAULT_KEYBOARD_BEHAVIOR","DEFAULT_KEYBOARD_BLUR_BEHAVIOR","DEFAULT_KEYBOARD_INPUT_MODE","INITIAL_CONTAINER_HEIGHT","INITIAL_HANDLE_HEIGHT","INITIAL_POSITION","INITIAL_SNAP_POINT","DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE","INITIAL_CONTAINER_OFFSET","INITIAL_VALUE","DEFAULT_DYNAMIC_SIZING","DEFAULT_ACCESSIBLE","DEFAULT_ACCESSIBILITY_LABEL","DEFAULT_ACCESSIBILITY_ROLE","styles","addWhitelistedUIProps","decelerationRate","BottomSheetComponent","BottomSheet","props","ref","animationConfigs","index","_providedIndex","snapPoints","_providedSnapPoints","animateOnMount","enableContentPanningGesture","enableHandlePanningGesture","enableOverDrag","enablePanDownToClose","enableDynamicSizing","overDragResistanceFactor","style","_providedStyle","containerStyle","_providedContainerStyle","backgroundStyle","_providedBackgroundStyle","handleStyle","_providedHandleStyle","handleIndicatorStyle","_providedHandleIndicatorStyle","gestureEventsHandlersHook","keyboardBehavior","keyboardBlurBehavior","android_keyboardInputMode","handleHeight","_providedHandleHeight","containerHeight","_providedContainerHeight","contentHeight","_providedContentHeight","containerOffset","_providedContainerOffset","topInset","bottomInset","maxDynamicContentSize","animatedPosition","_providedAnimatedPosition","animatedIndex","_providedAnimatedIndex","simultaneousHandlers","_providedSimultaneousHandlers","waitFor","_providedWaitFor","activeOffsetX","_providedActiveOffsetX","activeOffsetY","_providedActiveOffsetY","failOffsetX","_providedFailOffsetX","failOffsetY","_providedFailOffsetY","onChange","_providedOnChange","onClose","_providedOnClose","onAnimate","_providedOnAnimate","$modal","detached","handleComponent","backdropComponent","backgroundComponent","footerComponent","children","Content","accessible","_providedAccessible","accessibilityLabel","_providedAccessibilityLabel","accessibilityRole","_providedAccessibilityRole","_providedAnimationConfigs","undefined","reduceMotion","Never","_animatedContainerHeight","animatedContainerHeight","verticalInset","value","animatedContainerOffset","animatedHandleHeight","animatedFooterHeight","animatedContentHeight","animatedSnapPoints","animatedHighestSnapPoint","length","animatedClosedPosition","closedPosition","animatedSheetHeight","animatedCurrentIndex","preKeyboardIndex","animatedNextPosition","animatedNextPositionIndex","isAnimatedOnMount","isContentHeightFixed","isLayoutCalculated","isContainerHeightCalculated","isHandleHeightCalculated","isSnapPointsNormalized","isInTemporaryPosition","isForcedClosing","animatedContentGestureState","UNDETERMINED","animatedHandleGestureState","animatedScrollableType","animatedScrollableContentOffsetY","animatedScrollableOverrideState","isScrollableRefreshable","setScrollableRef","removeScrollableRef","state","animatedKeyboardState","height","animatedKeyboardHeight","animationDuration","keyboardAnimationDuration","animationEasing","keyboardAnimationEasing","shouldHandleKeyboardEvents","animatedKeyboardHeightInContainer","animatedAnimationState","animatedAnimationSource","MOUNT","animatedSheetState","CLOSED","extendedPosition","EXTENDED","keyboardHeightInContainer","extendedPositionWithKeyboard","Math","max","interactive","FILL_PARENT","OVER_EXTENDED","OPENED","animatedScrollableState","UNLOCKED","SHOWN","RUNNING","LOCKED","animatedContentHeightMax","extend","fillParent","contentWithKeyboardHeight","adjustedSnapPoints","slice","reverse","adjustedSnapPointsIndexes","map","_","push","currentIndex","CLAMP","adjustResize","KEYBOARD","SNAP_POINT_CHANGE","getNextPosition","keyboardState","highestSnapPoint","restore","HIDDEN","ACTIVE","nextPosition","handleOnChange","component","name","method","params","handleOnAnimate","toPoint","toIndex","indexOf","fromIndex","stopAnimation","NONE","STOPPED","animateToPositionCompleted","isFinished","animateToPosition","position","source","velocity","configs","currentPosition","point","onComplete","handleSnapToIndex","USER","handleSnapToPosition","handleClose","handleForceClose","handleExpand","handleCollapse","snapToIndex","snapToPosition","expand","collapse","close","forceClose","internalContextVariables","externalContextVariables","containerAnimatedStyle","opacity","OS","transform","translateY","container","contentContainerAnimatedStyle","contentContainerStyle","contentContainer","contentMaskContainerAnimatedStyle","overflow","paddingBottom","contentMaskContainerStyle","contentMaskContainer","_isLayoutCalculated","result","_previousResult","_previousSnapPoints","_previousContainerHeight","animationConfig","animationSource","CONTAINER_RESIZE","duration","JSON","stringify","_keyboardState","_keyboardHeight","_previousKeyboardState","_previousKeyboardHeight","abs","bottom","hasActiveGesture","BEGAN","none","keyboardHeight","_animatedPosition","_animatedIndex","_animationState","_contentGestureState","_handleGestureState","hasNoActiveGesture","END","CANCELLED","providedIndex","displayName"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n  useEffect,\n} from 'react';\nimport { Platform } from 'react-native';\nimport invariant from 'invariant';\nimport Animated, {\n  useAnimatedReaction,\n  useSharedValue,\n  useAnimatedStyle,\n  useDerivedValue,\n  runOnJS,\n  interpolate,\n  Extrapolate,\n  runOnUI,\n  cancelAnimation,\n  useWorkletCallback,\n  WithSpringConfig,\n  WithTimingConfig,\n  // @ts-expect-error Module '\"react-native-reanimated\"' has no exported member 'ReduceMotion'\n  ReduceMotion,\n} from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\nimport {\n  useScrollable,\n  usePropsValidator,\n  useReactiveSharedValue,\n  useNormalizedSnapPoints,\n  useKeyboard,\n} from '../../hooks';\nimport {\n  BottomSheetInternalProvider,\n  BottomSheetProvider,\n} from '../../contexts';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport BottomSheetGestureHandlersProvider from '../bottomSheetGestureHandlersProvider';\nimport BottomSheetBackdropContainer from '../bottomSheetBackdropContainer';\nimport BottomSheetHandleContainer from '../bottomSheetHandleContainer';\nimport BottomSheetBackgroundContainer from '../bottomSheetBackgroundContainer';\nimport BottomSheetFooterContainer from '../bottomSheetFooterContainer/BottomSheetFooterContainer';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\n// import BottomSheetDebugView from '../bottomSheetDebugView';\nimport {\n  ANIMATION_STATE,\n  KEYBOARD_STATE,\n  KEYBOARD_BEHAVIOR,\n  SHEET_STATE,\n  SCROLLABLE_STATE,\n  KEYBOARD_BLUR_BEHAVIOR,\n  KEYBOARD_INPUT_MODE,\n  ANIMATION_SOURCE,\n} from '../../constants';\nimport {\n  animate,\n  getKeyboardAnimationConfigs,\n  normalizeSnapPoint,\n  print,\n} from '../../utilities';\nimport {\n  DEFAULT_OVER_DRAG_RESISTANCE_FACTOR,\n  DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n  DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n  DEFAULT_ENABLE_OVER_DRAG,\n  DEFAULT_ANIMATE_ON_MOUNT,\n  DEFAULT_KEYBOARD_BEHAVIOR,\n  DEFAULT_KEYBOARD_BLUR_BEHAVIOR,\n  DEFAULT_KEYBOARD_INPUT_MODE,\n  INITIAL_CONTAINER_HEIGHT,\n  INITIAL_HANDLE_HEIGHT,\n  INITIAL_POSITION,\n  INITIAL_SNAP_POINT,\n  DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE,\n  INITIAL_CONTAINER_OFFSET,\n  INITIAL_VALUE,\n  DEFAULT_DYNAMIC_SIZING,\n  DEFAULT_ACCESSIBLE,\n  DEFAULT_ACCESSIBILITY_LABEL,\n  DEFAULT_ACCESSIBILITY_ROLE,\n} from './constants';\nimport type { BottomSheetMethods, Insets } from '../../types';\nimport type { BottomSheetProps, AnimateToPositionType } from './types';\nimport { styles } from './styles';\n\nAnimated.addWhitelistedUIProps({\n  decelerationRate: true,\n});\n\ntype BottomSheet = BottomSheetMethods;\n\nconst BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(\n  function BottomSheet(props, ref) {\n    //#region validate props\n    usePropsValidator(props);\n    //#endregion\n\n    //#region extract props\n    const {\n      // animations configurations\n      animationConfigs,\n      // configurations\n      index: _providedIndex = 0,\n      snapPoints: _providedSnapPoints,\n      animateOnMount = DEFAULT_ANIMATE_ON_MOUNT,\n      enableContentPanningGesture = DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n      enableHandlePanningGesture = DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n      enableOverDrag = DEFAULT_ENABLE_OVER_DRAG,\n      enablePanDownToClose = DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE,\n      enableDynamicSizing = DEFAULT_DYNAMIC_SIZING,\n      overDragResistanceFactor = DEFAULT_OVER_DRAG_RESISTANCE_FACTOR,\n\n      // styles\n      style: _providedStyle,\n      containerStyle: _providedContainerStyle,\n      backgroundStyle: _providedBackgroundStyle,\n      handleStyle: _providedHandleStyle,\n      handleIndicatorStyle: _providedHandleIndicatorStyle,\n\n      // hooks\n      gestureEventsHandlersHook,\n\n      // keyboard\n      keyboardBehavior = DEFAULT_KEYBOARD_BEHAVIOR,\n      keyboardBlurBehavior = DEFAULT_KEYBOARD_BLUR_BEHAVIOR,\n      android_keyboardInputMode = DEFAULT_KEYBOARD_INPUT_MODE,\n\n      // layout\n      handleHeight: _providedHandleHeight,\n      containerHeight: _providedContainerHeight,\n      contentHeight: _providedContentHeight,\n      containerOffset: _providedContainerOffset,\n      topInset = 0,\n      bottomInset = 0,\n      maxDynamicContentSize,\n\n      // animated callback shared values\n      animatedPosition: _providedAnimatedPosition,\n      animatedIndex: _providedAnimatedIndex,\n\n      // gestures\n      simultaneousHandlers: _providedSimultaneousHandlers,\n      waitFor: _providedWaitFor,\n      activeOffsetX: _providedActiveOffsetX,\n      activeOffsetY: _providedActiveOffsetY,\n      failOffsetX: _providedFailOffsetX,\n      failOffsetY: _providedFailOffsetY,\n\n      // callbacks\n      onChange: _providedOnChange,\n      onClose: _providedOnClose,\n      onAnimate: _providedOnAnimate,\n\n      // private\n      $modal = false,\n      detached = false,\n\n      // components\n      handleComponent,\n      backdropComponent,\n      backgroundComponent,\n      footerComponent,\n      children: Content,\n\n      // accessibility\n      accessible: _providedAccessible = DEFAULT_ACCESSIBLE,\n      accessibilityLabel:\n        _providedAccessibilityLabel = DEFAULT_ACCESSIBILITY_LABEL,\n      accessibilityRole:\n        _providedAccessibilityRole = DEFAULT_ACCESSIBILITY_ROLE,\n    } = props;\n    //#endregion\n\n    //#region animations configurations\n    const _providedAnimationConfigs = useMemo(() => {\n      if (!animationConfigs) {\n        return undefined;\n      }\n\n      if (ReduceMotion) {\n        // @ts-expect-error Property 'reduceMotion' does not exist on type 'WithSpringConfig | WithTimingConfig'.\n        animationConfigs.reduceMotion = ReduceMotion.Never;\n      }\n\n      return animationConfigs;\n    }, [animationConfigs]);\n    //#endregion\n\n    //#region layout variables\n    /**\n     * This variable is consider an internal variable,\n     * that will be used conditionally in `animatedContainerHeight`\n     */\n    const _animatedContainerHeight = useReactiveSharedValue(\n      _providedContainerHeight ?? INITIAL_CONTAINER_HEIGHT\n    );\n    /**\n     * This is a conditional variable, where if the `BottomSheet` is used\n     * in a modal, then it will subset vertical insets (top+bottom) from\n     * provided container height.\n     */\n    const animatedContainerHeight = useDerivedValue(() => {\n      const verticalInset = topInset + bottomInset;\n      return $modal\n        ? _animatedContainerHeight.value - verticalInset\n        : _animatedContainerHeight.value;\n    }, [$modal, topInset, bottomInset]);\n    const animatedContainerOffset = useReactiveSharedValue(\n      _providedContainerOffset ?? INITIAL_CONTAINER_OFFSET\n    ) as Animated.SharedValue<Insets>;\n    const animatedHandleHeight = useReactiveSharedValue(\n      _providedHandleHeight ?? INITIAL_HANDLE_HEIGHT\n    );\n    const animatedFooterHeight = useSharedValue(0);\n    const animatedContentHeight = useSharedValue(INITIAL_CONTAINER_HEIGHT);\n    const animatedSnapPoints = useNormalizedSnapPoints(\n      _providedSnapPoints,\n      animatedContainerHeight,\n      animatedContentHeight,\n      animatedHandleHeight,\n      enableDynamicSizing,\n      maxDynamicContentSize\n    );\n    const animatedHighestSnapPoint = useDerivedValue(\n      () => animatedSnapPoints.value[animatedSnapPoints.value.length - 1]\n    );\n    const animatedClosedPosition = useDerivedValue(() => {\n      let closedPosition = animatedContainerHeight.value;\n\n      if ($modal || detached) {\n        closedPosition = animatedContainerHeight.value + bottomInset;\n      }\n\n      return closedPosition;\n    }, [$modal, detached, bottomInset]);\n    const animatedSheetHeight = useDerivedValue(\n      () => animatedContainerHeight.value - animatedHighestSnapPoint.value\n    );\n    const animatedCurrentIndex = useReactiveSharedValue(\n      animateOnMount ? -1 : _providedIndex\n    );\n    const preKeyboardIndex = useSharedValue(INITIAL_POSITION);\n    const animatedPosition = useSharedValue(INITIAL_POSITION);\n    const animatedNextPosition = useSharedValue(INITIAL_VALUE);\n    const animatedNextPositionIndex = useSharedValue(0);\n\n    // conditional\n    const isAnimatedOnMount = useSharedValue(false);\n    const isContentHeightFixed = useSharedValue(false);\n    const isLayoutCalculated = useDerivedValue(() => {\n      let isContainerHeightCalculated = false;\n      //container height was provided.\n      if (\n        _providedContainerHeight !== null ||\n        _providedContainerHeight !== undefined\n      ) {\n        isContainerHeightCalculated = true;\n      }\n      // container height did set.\n      if (animatedContainerHeight.value !== INITIAL_CONTAINER_HEIGHT) {\n        isContainerHeightCalculated = true;\n      }\n\n      let isHandleHeightCalculated = false;\n      // handle height is provided.\n      if (\n        _providedHandleHeight !== null &&\n        _providedHandleHeight !== undefined &&\n        typeof _providedHandleHeight === 'number'\n      ) {\n        isHandleHeightCalculated = true;\n      }\n      // handle component is null.\n      if (handleComponent === null) {\n        animatedHandleHeight.value = 0;\n        isHandleHeightCalculated = true;\n      }\n      // handle height did set.\n      if (animatedHandleHeight.value !== INITIAL_HANDLE_HEIGHT) {\n        isHandleHeightCalculated = true;\n      }\n\n      let isSnapPointsNormalized = false;\n      // the first snap point did normalized\n      if (animatedSnapPoints.value[0] !== INITIAL_SNAP_POINT) {\n        isSnapPointsNormalized = true;\n      }\n\n      return (\n        isContainerHeightCalculated &&\n        isHandleHeightCalculated &&\n        isSnapPointsNormalized\n      );\n    });\n    const isInTemporaryPosition = useSharedValue(false);\n    const isForcedClosing = useSharedValue(false);\n\n    // gesture\n    const animatedContentGestureState = useSharedValue<State>(\n      State.UNDETERMINED\n    );\n    const animatedHandleGestureState = useSharedValue<State>(\n      State.UNDETERMINED\n    );\n    //#endregion\n\n    //#region hooks variables\n    // scrollable variables\n    const {\n      animatedScrollableType,\n      animatedScrollableContentOffsetY,\n      animatedScrollableOverrideState,\n      isScrollableRefreshable,\n      setScrollableRef,\n      removeScrollableRef,\n    } = useScrollable();\n    // keyboard\n    const {\n      state: animatedKeyboardState,\n      height: animatedKeyboardHeight,\n      animationDuration: keyboardAnimationDuration,\n      animationEasing: keyboardAnimationEasing,\n      shouldHandleKeyboardEvents,\n    } = useKeyboard();\n    const animatedKeyboardHeightInContainer = useSharedValue(0);\n    //#endregion\n\n    //#region state/dynamic variables\n    // states\n    const animatedAnimationState = useSharedValue(ANIMATION_STATE.UNDETERMINED);\n    const animatedAnimationSource = useSharedValue<ANIMATION_SOURCE>(\n      ANIMATION_SOURCE.MOUNT\n    );\n    const animatedSheetState = useDerivedValue(() => {\n      // closed position = position >= container height\n      if (animatedPosition.value >= animatedClosedPosition.value)\n        return SHEET_STATE.CLOSED;\n\n      // extended position = container height - sheet height\n      const extendedPosition =\n        animatedContainerHeight.value - animatedSheetHeight.value;\n      if (animatedPosition.value === extendedPosition)\n        return SHEET_STATE.EXTENDED;\n\n      // extended position with keyboard =\n      // container height - (sheet height + keyboard height in root container)\n      const keyboardHeightInContainer = animatedKeyboardHeightInContainer.value;\n      const extendedPositionWithKeyboard = Math.max(\n        0,\n        animatedContainerHeight.value -\n          (animatedSheetHeight.value + keyboardHeightInContainer)\n      );\n\n      // detect if keyboard is open and the sheet is in temporary position\n      if (\n        keyboardBehavior === KEYBOARD_BEHAVIOR.interactive &&\n        isInTemporaryPosition.value &&\n        animatedPosition.value === extendedPositionWithKeyboard\n      ) {\n        return SHEET_STATE.EXTENDED;\n      }\n\n      // fill parent = 0\n      if (animatedPosition.value === 0) {\n        return SHEET_STATE.FILL_PARENT;\n      }\n\n      // detect if position is below extended point\n      if (animatedPosition.value < extendedPosition) {\n        return SHEET_STATE.OVER_EXTENDED;\n      }\n\n      return SHEET_STATE.OPENED;\n    }, [\n      animatedClosedPosition,\n      animatedContainerHeight,\n      animatedKeyboardHeightInContainer,\n      animatedPosition,\n      animatedSheetHeight,\n      isInTemporaryPosition,\n      keyboardBehavior,\n    ]);\n    const animatedScrollableState = useDerivedValue(() => {\n      /**\n       * if scrollable override state is set, then we just return its value.\n       */\n      if (\n        animatedScrollableOverrideState.value !== SCROLLABLE_STATE.UNDETERMINED\n      ) {\n        return animatedScrollableOverrideState.value;\n      }\n      /**\n       * if sheet state is fill parent, then unlock scrolling\n       */\n      if (animatedSheetState.value === SHEET_STATE.FILL_PARENT) {\n        return SCROLLABLE_STATE.UNLOCKED;\n      }\n\n      /**\n       * if sheet state is extended, then unlock scrolling\n       */\n      if (animatedSheetState.value === SHEET_STATE.EXTENDED) {\n        return SCROLLABLE_STATE.UNLOCKED;\n      }\n\n      /**\n       * if keyboard is shown and sheet is animating\n       * then we do not lock the scrolling to not lose\n       * current scrollable scroll position.\n       */\n      if (\n        animatedKeyboardState.value === KEYBOARD_STATE.SHOWN &&\n        animatedAnimationState.value === ANIMATION_STATE.RUNNING\n      ) {\n        return SCROLLABLE_STATE.UNLOCKED;\n      }\n\n      return SCROLLABLE_STATE.LOCKED;\n    });\n    // dynamic\n    const animatedContentHeightMax = useDerivedValue(() => {\n      const keyboardHeightInContainer = animatedKeyboardHeightInContainer.value;\n      const handleHeight = Math.max(0, animatedHandleHeight.value);\n      let contentHeight = animatedSheetHeight.value - handleHeight;\n\n      if (\n        keyboardBehavior === KEYBOARD_BEHAVIOR.extend &&\n        animatedKeyboardState.value === KEYBOARD_STATE.SHOWN\n      ) {\n        contentHeight = contentHeight - keyboardHeightInContainer;\n      } else if (\n        keyboardBehavior === KEYBOARD_BEHAVIOR.fillParent &&\n        isInTemporaryPosition.value\n      ) {\n        if (animatedKeyboardState.value === KEYBOARD_STATE.SHOWN) {\n          contentHeight =\n            animatedContainerHeight.value -\n            handleHeight -\n            keyboardHeightInContainer;\n        } else {\n          contentHeight = animatedContainerHeight.value - handleHeight;\n        }\n      } else if (\n        keyboardBehavior === KEYBOARD_BEHAVIOR.interactive &&\n        isInTemporaryPosition.value\n      ) {\n        const contentWithKeyboardHeight =\n          contentHeight + keyboardHeightInContainer;\n\n        if (animatedKeyboardState.value === KEYBOARD_STATE.SHOWN) {\n          if (\n            keyboardHeightInContainer + animatedSheetHeight.value >\n            animatedContainerHeight.value\n          ) {\n            contentHeight =\n              animatedContainerHeight.value -\n              keyboardHeightInContainer -\n              handleHeight;\n          }\n        } else if (\n          contentWithKeyboardHeight + handleHeight >\n          animatedContainerHeight.value\n        ) {\n          contentHeight = animatedContainerHeight.value - handleHeight;\n        } else {\n          contentHeight = contentWithKeyboardHeight;\n        }\n      }\n\n      /**\n       * before the container is measured, `contentHeight` value will be below zero,\n       * which will lead to freeze the scrollable.\n       *\n       * @link (https://github.com/gorhom/react-native-bottom-sheet/issues/470)\n       */\n      return Math.max(contentHeight, 0);\n    }, [\n      animatedContainerHeight,\n      animatedHandleHeight,\n      animatedKeyboardHeightInContainer,\n      animatedKeyboardState,\n      animatedSheetHeight,\n      isInTemporaryPosition,\n      keyboardBehavior,\n    ]);\n    const animatedIndex = useDerivedValue(() => {\n      const adjustedSnapPoints = animatedSnapPoints.value.slice().reverse();\n      const adjustedSnapPointsIndexes = animatedSnapPoints.value\n        .slice()\n        .map((_: any, index: number) => index)\n        .reverse();\n\n      /**\n       * we add the close state index `-1`\n       */\n      adjustedSnapPoints.push(animatedContainerHeight.value);\n      adjustedSnapPointsIndexes.push(-1);\n\n      const currentIndex = isLayoutCalculated.value\n        ? interpolate(\n            animatedPosition.value,\n            adjustedSnapPoints,\n            adjustedSnapPointsIndexes,\n            Extrapolate.CLAMP\n          )\n        : -1;\n\n      /**\n       * if the sheet is currently running an animation by the keyboard opening,\n       * then we clamp the index on android with resize keyboard mode.\n       */\n      if (\n        android_keyboardInputMode === KEYBOARD_INPUT_MODE.adjustResize &&\n        animatedAnimationSource.value === ANIMATION_SOURCE.KEYBOARD &&\n        animatedAnimationState.value === ANIMATION_STATE.RUNNING &&\n        isInTemporaryPosition.value\n      ) {\n        return Math.max(animatedCurrentIndex.value, currentIndex);\n      }\n\n      /**\n       * if the sheet is currently running an animation by snap point change - usually caused\n       * by dynamic content height -, then we return the next position index.\n       */\n      if (\n        animatedAnimationSource.value === ANIMATION_SOURCE.SNAP_POINT_CHANGE &&\n        animatedAnimationState.value === ANIMATION_STATE.RUNNING\n      ) {\n        return animatedNextPositionIndex.value;\n      }\n\n      return currentIndex;\n    }, [android_keyboardInputMode]);\n    //#endregion\n\n    //#region private methods\n    /**\n     * Calculate the next position based on keyboard state.\n     */\n    const getNextPosition = useWorkletCallback(\n      function getNextPosition() {\n        'worklet';\n        const currentIndex = animatedCurrentIndex.value;\n        const snapPoints = animatedSnapPoints.value;\n        const keyboardState = animatedKeyboardState.value;\n        const highestSnapPoint = animatedHighestSnapPoint.value;\n\n        /**\n         * Handle restore sheet position on blur\n         */\n        if (\n          keyboardBlurBehavior === KEYBOARD_BLUR_BEHAVIOR.restore &&\n          keyboardState === KEYBOARD_STATE.HIDDEN &&\n          animatedContentGestureState.value !== State.ACTIVE &&\n          animatedHandleGestureState.value !== State.ACTIVE\n        ) {\n          isInTemporaryPosition.value = false;\n          const nextPosition = snapPoints[preKeyboardIndex.value];\n          return nextPosition;\n        }\n\n        /**\n         * Handle extend behavior\n         */\n        if (\n          keyboardBehavior === KEYBOARD_BEHAVIOR.extend &&\n          keyboardState === KEYBOARD_STATE.SHOWN\n        ) {\n          preKeyboardIndex.value = currentIndex;\n          const keyboardHeightInContainer =\n            animatedKeyboardHeightInContainer.value;\n          return Math.max(0, highestSnapPoint - keyboardHeightInContainer);;\n        }\n\n        /**\n         * Handle full screen behavior\n         */\n        if (\n          keyboardBehavior === KEYBOARD_BEHAVIOR.fillParent &&\n          keyboardState === KEYBOARD_STATE.SHOWN\n        ) {\n          isInTemporaryPosition.value = true;\n          preKeyboardIndex.value = currentIndex;\n          return 0;\n        }\n\n        /**\n         * handle interactive behavior\n         */\n        if (\n          keyboardBehavior === KEYBOARD_BEHAVIOR.interactive &&\n          keyboardState === KEYBOARD_STATE.SHOWN\n        ) {\n          isInTemporaryPosition.value = true;\n          const keyboardHeightInContainer =\n            animatedKeyboardHeightInContainer.value;\n            preKeyboardIndex.value = currentIndex;\n          return Math.max(0, snapPoints[currentIndex] - keyboardHeightInContainer);\n        }\n\n        if (isInTemporaryPosition.value) {\n          return animatedPosition.value;\n        }\n\n        return snapPoints[currentIndex];\n      },\n      [\n        animatedContentGestureState,\n        animatedCurrentIndex,\n        animatedHandleGestureState,\n        animatedHighestSnapPoint,\n        animatedKeyboardHeightInContainer,\n        animatedKeyboardState,\n        animatedPosition,\n        animatedSnapPoints,\n        isInTemporaryPosition,\n        keyboardBehavior,\n        keyboardBlurBehavior,\n      ]\n    );\n    const handleOnChange = useCallback(\n      function handleOnChange(index: number) {\n        print({\n          component: BottomSheet.name,\n          method: handleOnChange.name,\n          params: {\n            index,\n            animatedCurrentIndex: animatedCurrentIndex.value,\n          },\n        });\n\n        if (_providedOnChange) {\n          _providedOnChange(index);\n        }\n      },\n      [_providedOnChange, animatedCurrentIndex]\n    );\n    const handleOnAnimate = useCallback(\n      function handleOnAnimate(toPoint: number) {\n        const snapPoints = animatedSnapPoints.value;\n        const toIndex = snapPoints.indexOf(toPoint);\n\n        print({\n          component: BottomSheet.name,\n          method: handleOnAnimate.name,\n          params: {\n            toIndex,\n            fromIndex: animatedCurrentIndex.value,\n          },\n        });\n\n        if (!_providedOnAnimate) {\n          return;\n        }\n\n        if (toIndex !== animatedCurrentIndex.value) {\n          _providedOnAnimate(animatedCurrentIndex.value, toIndex);\n        }\n      },\n      [_providedOnAnimate, animatedSnapPoints, animatedCurrentIndex]\n    );\n    //#endregion\n\n    //#region animation\n    const stopAnimation = useWorkletCallback(() => {\n      cancelAnimation(animatedPosition);\n      isForcedClosing.value = false;\n      animatedAnimationSource.value = ANIMATION_SOURCE.NONE;\n      animatedAnimationState.value = ANIMATION_STATE.STOPPED;\n    }, [animatedPosition, animatedAnimationState, animatedAnimationSource]);\n    const animateToPositionCompleted = useWorkletCallback(\n      function animateToPositionCompleted(isFinished?: boolean) {\n        isForcedClosing.value = false;\n\n        if (!isFinished) {\n          return;\n        }\n        runOnJS(print)({\n          component: BottomSheet.name,\n          method: animateToPositionCompleted.name,\n          params: {\n            animatedCurrentIndex: animatedCurrentIndex.value,\n            animatedNextPosition: animatedNextPosition.value,\n            animatedNextPositionIndex: animatedNextPositionIndex.value,\n          },\n        });\n\n        animatedAnimationSource.value = ANIMATION_SOURCE.NONE;\n        animatedAnimationState.value = ANIMATION_STATE.STOPPED;\n        animatedNextPosition.value = INITIAL_VALUE;\n        animatedNextPositionIndex.value = INITIAL_VALUE;\n      }\n    );\n    const animateToPosition: AnimateToPositionType = useWorkletCallback(\n      function animateToPosition(\n        position: number,\n        source: ANIMATION_SOURCE,\n        velocity: number = 0,\n        configs?: WithTimingConfig | WithSpringConfig\n      ) {\n        if (\n          position === animatedPosition.value ||\n          position === undefined ||\n          (animatedAnimationState.value === ANIMATION_STATE.RUNNING &&\n            position === animatedNextPosition.value)\n        ) {\n          return;\n        }\n\n        runOnJS(print)({\n          component: BottomSheet.name,\n          method: animateToPosition.name,\n          params: {\n            currentPosition: animatedPosition.value,\n            position,\n            velocity,\n            animatedContainerHeight: animatedContainerHeight.value,\n          },\n        });\n\n        stopAnimation();\n\n        /**\n         * set animation state to running, and source\n         */\n        animatedAnimationState.value = ANIMATION_STATE.RUNNING;\n        animatedAnimationSource.value = source;\n\n        /**\n         * store next position\n         */\n        animatedNextPosition.value = position;\n        animatedNextPositionIndex.value =\n          animatedSnapPoints.value.indexOf(position);\n\n        /**\n         * fire `onAnimate` callback\n         */\n        runOnJS(handleOnAnimate)(position);\n\n        /**\n         * force animation configs from parameters, if provided\n         */\n        if (configs !== undefined) {\n          if (ReduceMotion) {\n            // @ts-expect-error Property 'reduceMotion' does not exist on type 'WithSpringConfig | WithTimingConfig'.\n            configs.reduceMotion = ReduceMotion.Never;\n          }\n          animatedPosition.value = animate({\n            point: position,\n            configs,\n            velocity,\n            onComplete: animateToPositionCompleted,\n          });\n        } else {\n          /**\n           * use animationConfigs callback, if provided\n           */\n          animatedPosition.value = animate({\n            point: position,\n            velocity,\n            configs: _providedAnimationConfigs,\n            onComplete: animateToPositionCompleted,\n          });\n        }\n      },\n      [handleOnAnimate, _providedAnimationConfigs]\n    );\n    //#endregion\n\n    //#region public methods\n    const handleSnapToIndex = useCallback(\n      function handleSnapToIndex(\n        index: number,\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        const snapPoints = animatedSnapPoints.value;\n        invariant(\n          index >= -1 && index <= snapPoints.length - 1,\n          `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n            snapPoints.length - 1\n          }`\n        );\n        print({\n          component: BottomSheet.name,\n          method: handleSnapToIndex.name,\n          params: {\n            index,\n          },\n        });\n\n        const nextPosition = snapPoints[index];\n\n        /**\n         * exit method if :\n         * - layout is not calculated.\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          !isLayoutCalculated.value ||\n          index === animatedNextPositionIndex.value ||\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * reset temporary position boolean.\n         */\n        isInTemporaryPosition.value = false;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        isLayoutCalculated,\n        isInTemporaryPosition,\n        isForcedClosing,\n        animatedSnapPoints,\n        animatedNextPosition,\n        animatedNextPositionIndex,\n      ]\n    );\n    const handleSnapToPosition = useWorkletCallback(\n      function handleSnapToPosition(\n        position: number | string,\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        print({\n          component: BottomSheet.name,\n          method: handleSnapToPosition.name,\n          params: {\n            position,\n          },\n        });\n\n        /**\n         * normalized provided position.\n         */\n        const nextPosition = normalizeSnapPoint(\n          position,\n          animatedContainerHeight.value\n        );\n\n        /**\n         * exit method if :\n         * - layout is not calculated.\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          !isLayoutCalculated ||\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * mark the new position as temporary.\n         */\n        isInTemporaryPosition.value = true;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        bottomInset,\n        topInset,\n        isLayoutCalculated,\n        isForcedClosing,\n        animatedContainerHeight,\n        animatedPosition,\n      ]\n    );\n    const handleClose = useCallback(\n      function handleClose(\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        print({\n          component: BottomSheet.name,\n          method: handleClose.name,\n        });\n\n        const nextPosition = animatedClosedPosition.value;\n\n        /**\n         * exit method if :\n         * - layout is not calculated.\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          !isLayoutCalculated.value ||\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * reset temporary position variable.\n         */\n        isInTemporaryPosition.value = false;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        isForcedClosing,\n        isLayoutCalculated,\n        isInTemporaryPosition,\n        animatedNextPosition,\n        animatedClosedPosition,\n      ]\n    );\n    const handleForceClose = useCallback(\n      function handleForceClose(\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        print({\n          component: BottomSheet.name,\n          method: handleForceClose.name,\n        });\n\n        const nextPosition = animatedClosedPosition.value;\n\n        /**\n         * exit method if :\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * reset temporary position variable.\n         */\n        isInTemporaryPosition.value = false;\n\n        /**\n         * set force closing variable.\n         */\n        isForcedClosing.value = true;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        isForcedClosing,\n        isInTemporaryPosition,\n        animatedNextPosition,\n        animatedClosedPosition,\n      ]\n    );\n    const handleExpand = useCallback(\n      function handleExpand(\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        print({\n          component: BottomSheet.name,\n          method: handleExpand.name,\n        });\n\n        const snapPoints = animatedSnapPoints.value;\n        const nextPosition = snapPoints[snapPoints.length - 1];\n\n        /**\n         * exit method if :\n         * - layout is not calculated.\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          !isLayoutCalculated.value ||\n          snapPoints.length - 1 === animatedNextPositionIndex.value ||\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * reset temporary position boolean.\n         */\n        isInTemporaryPosition.value = false;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        isInTemporaryPosition,\n        isLayoutCalculated,\n        isForcedClosing,\n        animatedSnapPoints,\n        animatedNextPosition,\n        animatedNextPositionIndex,\n      ]\n    );\n    const handleCollapse = useCallback(\n      function handleCollapse(\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        print({\n          component: BottomSheet.name,\n          method: handleCollapse.name,\n        });\n\n        const nextPosition = animatedSnapPoints.value[0];\n\n        /**\n         * exit method if :\n         * - layout is not calculated.\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          !isLayoutCalculated ||\n          animatedNextPositionIndex.value === 0 ||\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * reset temporary position boolean.\n         */\n        isInTemporaryPosition.value = false;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        isForcedClosing,\n        isLayoutCalculated,\n        isInTemporaryPosition,\n        animatedSnapPoints,\n        animatedNextPosition,\n        animatedNextPositionIndex,\n      ]\n    );\n\n    useImperativeHandle(ref, () => ({\n      snapToIndex: handleSnapToIndex,\n      snapToPosition: handleSnapToPosition,\n      expand: handleExpand,\n      collapse: handleCollapse,\n      close: handleClose,\n      forceClose: handleForceClose,\n    }));\n    //#endregion\n\n    //#region contexts variables\n    const internalContextVariables = useMemo(\n      () => ({\n        enableContentPanningGesture,\n        enableDynamicSizing,\n        overDragResistanceFactor,\n        enableOverDrag,\n        enablePanDownToClose,\n        animatedAnimationState,\n        animatedSheetState,\n        animatedScrollableState,\n        animatedScrollableOverrideState,\n        animatedContentGestureState,\n        animatedHandleGestureState,\n        animatedKeyboardState,\n        animatedScrollableType,\n        animatedIndex,\n        animatedPosition,\n        animatedContentHeight,\n        animatedClosedPosition,\n        animatedHandleHeight,\n        animatedFooterHeight,\n        animatedKeyboardHeight,\n        animatedKeyboardHeightInContainer,\n        animatedContainerHeight,\n        animatedSnapPoints,\n        animatedHighestSnapPoint,\n        animatedScrollableContentOffsetY,\n        isInTemporaryPosition,\n        isContentHeightFixed,\n        isScrollableRefreshable,\n        shouldHandleKeyboardEvents,\n        simultaneousHandlers: _providedSimultaneousHandlers,\n        waitFor: _providedWaitFor,\n        activeOffsetX: _providedActiveOffsetX,\n        activeOffsetY: _providedActiveOffsetY,\n        failOffsetX: _providedFailOffsetX,\n        failOffsetY: _providedFailOffsetY,\n        animateToPosition,\n        stopAnimation,\n        setScrollableRef,\n        removeScrollableRef,\n      }),\n      [\n        animatedIndex,\n        animatedPosition,\n        animatedContentHeight,\n        animatedScrollableType,\n        animatedContentGestureState,\n        animatedHandleGestureState,\n        animatedClosedPosition,\n        animatedFooterHeight,\n        animatedContainerHeight,\n        animatedHandleHeight,\n        animatedAnimationState,\n        animatedKeyboardState,\n        animatedKeyboardHeight,\n        animatedKeyboardHeightInContainer,\n        animatedSheetState,\n        animatedHighestSnapPoint,\n        animatedScrollableState,\n        animatedScrollableOverrideState,\n        animatedSnapPoints,\n        shouldHandleKeyboardEvents,\n        animatedScrollableContentOffsetY,\n        isScrollableRefreshable,\n        isContentHeightFixed,\n        isInTemporaryPosition,\n        enableContentPanningGesture,\n        overDragResistanceFactor,\n        enableOverDrag,\n        enablePanDownToClose,\n        enableDynamicSizing,\n        _providedSimultaneousHandlers,\n        _providedWaitFor,\n        _providedActiveOffsetX,\n        _providedActiveOffsetY,\n        _providedFailOffsetX,\n        _providedFailOffsetY,\n        setScrollableRef,\n        removeScrollableRef,\n        animateToPosition,\n        stopAnimation,\n      ]\n    );\n    const externalContextVariables = useMemo(\n      () => ({\n        animatedIndex,\n        animatedPosition,\n        snapToIndex: handleSnapToIndex,\n        snapToPosition: handleSnapToPosition,\n        expand: handleExpand,\n        collapse: handleCollapse,\n        close: handleClose,\n        forceClose: handleForceClose,\n      }),\n      [\n        animatedIndex,\n        animatedPosition,\n        handleSnapToIndex,\n        handleSnapToPosition,\n        handleExpand,\n        handleCollapse,\n        handleClose,\n        handleForceClose,\n      ]\n    );\n    //#endregion\n\n    //#region styles\n    const containerAnimatedStyle = useAnimatedStyle(\n      () => ({\n        opacity:\n          Platform.OS === 'android' && animatedIndex.value === -1 ? 0 : 1,\n        transform: [\n          {\n            translateY: animatedPosition.value,\n          },\n        ],\n      }),\n      [animatedPosition, animatedIndex]\n    );\n    const containerStyle = useMemo(\n      () => [_providedStyle, styles.container, containerAnimatedStyle],\n      [_providedStyle, containerAnimatedStyle]\n    );\n    const contentContainerAnimatedStyle = useAnimatedStyle(() => {\n      /**\n       * if content height was provided, then we skip setting\n       * calculated height.\n       */\n      if (_providedContentHeight) {\n        return {};\n      }\n\n      return {\n        height: animate({\n          point: animatedContentHeightMax.value,\n          configs: _providedAnimationConfigs,\n        }),\n      };\n    }, [animatedContentHeightMax, enableDynamicSizing, animatedContentHeight]);\n    const contentContainerStyle = useMemo(\n      () => [styles.contentContainer, contentContainerAnimatedStyle],\n      [contentContainerAnimatedStyle]\n    );\n    /**\n     * added safe area to prevent the sheet from floating above\n     * the bottom of the screen, when sheet being over dragged or\n     * when the sheet is resized.\n     */\n    const contentMaskContainerAnimatedStyle = useAnimatedStyle(() => {\n      if (detached) {\n        return {\n          overflow: 'visible',\n        };\n      }\n      return {\n        paddingBottom: animatedContainerHeight.value,\n      };\n    }, [detached]);\n    const contentMaskContainerStyle = useMemo(\n      () => [styles.contentMaskContainer, contentMaskContainerAnimatedStyle],\n      [contentMaskContainerAnimatedStyle]\n    );\n    //#endregion\n\n    //#region effects\n    /**\n     * React to `isLayoutCalculated` change, to insure that the sheet will\n     * appears/mounts only when all layout is been calculated.\n     *\n     * @alias OnMount\n     */\n    useAnimatedReaction(\n      () => isLayoutCalculated.value,\n      _isLayoutCalculated => {\n        /**\n         * exit method if:\n         * - layout is not calculated yet.\n         * - already did animate on mount.\n         */\n        if (!_isLayoutCalculated || isAnimatedOnMount.value) {\n          return;\n        }\n\n        let nextPosition;\n        if (_providedIndex === -1) {\n          nextPosition = animatedClosedPosition.value;\n          animatedNextPositionIndex.value = -1;\n        } else {\n          nextPosition = animatedSnapPoints.value[_providedIndex];\n        }\n\n        runOnJS(print)({\n          component: BottomSheet.name,\n          method: 'useAnimatedReaction::OnMount',\n          params: {\n            isLayoutCalculated: _isLayoutCalculated,\n            animatedSnapPoints: animatedSnapPoints.value,\n            nextPosition,\n          },\n        });\n\n        /**\n         * here we exit method early because the next position\n         * is out of the screen, this happens when `snapPoints`\n         * still being calculated.\n         */\n        if (\n          nextPosition === INITIAL_POSITION ||\n          nextPosition === animatedClosedPosition.value\n        ) {\n          isAnimatedOnMount.value = true;\n          animatedCurrentIndex.value = _providedIndex;\n          return;\n        }\n\n        if (animateOnMount) {\n          animateToPosition(nextPosition, ANIMATION_SOURCE.MOUNT);\n        } else {\n          animatedPosition.value = nextPosition;\n        }\n        isAnimatedOnMount.value = true;\n      },\n      [_providedIndex, animateOnMount]\n    );\n\n    /**\n     * React to `snapPoints` change, to insure that the sheet position reflect\n     * to the current point correctly.\n     *\n     * @alias OnSnapPointsChange\n     */\n    useAnimatedReaction(\n      () => ({\n        snapPoints: animatedSnapPoints.value,\n        containerHeight: animatedContainerHeight.value,\n      }),\n      (result, _previousResult) => {\n        const { snapPoints, containerHeight } = result;\n        const _previousSnapPoints = _previousResult?.snapPoints;\n        const _previousContainerHeight = _previousResult?.containerHeight;\n\n        let nextPosition;\n        let animationConfig;\n        let animationSource = ANIMATION_SOURCE.SNAP_POINT_CHANGE;\n\n        /**\n         * if the bottom sheet is closing and the container gets resized,\n         * then we restart the closing animation to the new position.\n         */\n        if (\n          animatedAnimationState.value === ANIMATION_STATE.RUNNING &&\n          animatedNextPositionIndex.value === -1 &&\n          _previousContainerHeight !== containerHeight\n        ) {\n          animationSource = ANIMATION_SOURCE.CONTAINER_RESIZE;\n          animationConfig = {\n            duration: 0,\n          };\n          animateToPosition(\n            containerHeight,\n            animationSource,\n            0,\n            animationConfig\n          );\n        }\n\n        if (\n          JSON.stringify(snapPoints) === JSON.stringify(_previousSnapPoints) ||\n          !isLayoutCalculated.value ||\n          !isAnimatedOnMount.value ||\n          containerHeight <= 0\n        ) {\n          return;\n        }\n\n        runOnJS(print)({\n          component: BottomSheet.name,\n          method: 'useAnimatedReaction::OnSnapPointChange',\n          params: {\n            snapPoints,\n          },\n        });\n\n        /**\n         * if snap points changed while sheet is animating, then\n         * we stop the animation and animate to the updated point.\n         */\n        if (\n          animatedAnimationState.value === ANIMATION_STATE.RUNNING &&\n          animatedNextPositionIndex.value !== animatedCurrentIndex.value\n        ) {\n          nextPosition =\n            animatedNextPositionIndex.value !== -1\n              ? snapPoints[animatedNextPositionIndex.value]\n              : animatedNextPosition.value;\n        } else if (animatedCurrentIndex.value === -1) {\n          nextPosition = animatedClosedPosition.value;\n        } else if (isInTemporaryPosition.value) {\n          nextPosition = getNextPosition();\n        } else {\n          nextPosition = snapPoints[animatedCurrentIndex.value];\n\n          /**\n           * if snap points changes because of the container height change,\n           * then we skip the snap animation by setting the duration to 0.\n           */\n          if (containerHeight !== _previousContainerHeight) {\n            animationSource = ANIMATION_SOURCE.CONTAINER_RESIZE;\n            animationConfig = {\n              duration: 0,\n            };\n          }\n        }\n        animateToPosition(nextPosition, animationSource, 0, animationConfig);\n      }\n    );\n\n    /**\n     * React to keyboard appearance state.\n     *\n     * @alias OnKeyboardStateChange\n     */\n    useAnimatedReaction(\n      () => ({\n        _keyboardState: animatedKeyboardState.value,\n        _keyboardHeight: animatedKeyboardHeight.value,\n      }),\n      (result, _previousResult) => {\n        const { _keyboardState, _keyboardHeight } = result;\n        const _previousKeyboardState = _previousResult?._keyboardState;\n        const _previousKeyboardHeight = _previousResult?._keyboardHeight;\n\n        /**\n         * Calculate the keyboard height in the container.\n         */\n        animatedKeyboardHeightInContainer.value = $modal\n          ? Math.abs(\n              _keyboardHeight -\n                Math.abs(bottomInset - animatedContainerOffset.value.bottom)\n            )\n          : Math.abs(_keyboardHeight - animatedContainerOffset.value.bottom);\n\n        const hasActiveGesture =\n          animatedContentGestureState.value === State.ACTIVE ||\n          animatedContentGestureState.value === State.BEGAN ||\n          animatedHandleGestureState.value === State.ACTIVE ||\n          animatedHandleGestureState.value === State.BEGAN;\n\n        if (\n          /**\n           * if keyboard state is equal to the previous state, then exit the method\n           */\n          (_keyboardState === _previousKeyboardState &&\n            _keyboardHeight === _previousKeyboardHeight) ||\n          /**\n           * if user is interacting with sheet, then exit the method\n           */\n          hasActiveGesture ||\n          /**\n           * if sheet not animated on mount yet, then exit the method\n           */\n          !isAnimatedOnMount.value ||\n          /**\n           * if new keyboard state is hidden and blur behavior is none, then exit the method\n           */\n          (_keyboardState === KEYBOARD_STATE.HIDDEN &&\n            keyboardBlurBehavior === KEYBOARD_BLUR_BEHAVIOR.none) ||\n          /**\n           * if platform is android and the input mode is resize, then exit the method\n           */\n          (Platform.OS === 'android' &&\n            keyboardBehavior === KEYBOARD_BEHAVIOR.interactive &&\n            android_keyboardInputMode === KEYBOARD_INPUT_MODE.adjustResize)\n        ) {\n          animatedKeyboardHeightInContainer.value = 0;\n          return;\n        }\n\n        runOnJS(print)({\n          component: BottomSheet.name,\n          method: 'useAnimatedReaction::OnKeyboardStateChange',\n          params: {\n            keyboardState: _keyboardState,\n            keyboardHeight: _keyboardHeight,\n          },\n        });\n\n        let animationConfigs = getKeyboardAnimationConfigs(\n          keyboardAnimationEasing.value,\n          keyboardAnimationDuration.value\n        );\n        const nextPosition = getNextPosition();\n        animateToPosition(\n          nextPosition,\n          ANIMATION_SOURCE.KEYBOARD,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        $modal,\n        bottomInset,\n        keyboardBehavior,\n        keyboardBlurBehavior,\n        android_keyboardInputMode,\n        animatedContainerOffset,\n        getNextPosition,\n      ]\n    );\n\n    /**\n     * sets provided animated position\n     */\n    useAnimatedReaction(\n      () => animatedPosition.value,\n      _animatedPosition => {\n        if (_providedAnimatedPosition) {\n          _providedAnimatedPosition.value = _animatedPosition + topInset;\n        }\n      }\n    );\n\n    /**\n     * sets provided animated index\n     */\n    useAnimatedReaction(\n      () => animatedIndex.value,\n      _animatedIndex => {\n        if (_providedAnimatedIndex) {\n          _providedAnimatedIndex.value = _animatedIndex;\n        }\n      }\n    );\n\n    /**\n     * React to internal variables to detect change in snap position.\n     *\n     * @alias OnChange\n     */\n    useAnimatedReaction(\n      () => ({\n        _animatedIndex: animatedIndex.value,\n        _animatedPosition: animatedPosition.value,\n        _animationState: animatedAnimationState.value,\n        _contentGestureState: animatedContentGestureState.value,\n        _handleGestureState: animatedHandleGestureState.value,\n      }),\n      ({\n        _animatedIndex,\n        _animationState,\n        _contentGestureState,\n        _handleGestureState,\n      }) => {\n        /**\n         * exit the method if animation state is not stopped.\n         */\n        if (_animationState !== ANIMATION_STATE.STOPPED) {\n          return;\n        }\n\n        /**\n         * exit the method if animated index value\n         * has fraction, e.g. 1.99, 0.52\n         */\n        if (_animatedIndex % 1 !== 0) {\n          return;\n        }\n\n        /**\n         * exit the method if there any active gesture.\n         */\n        const hasNoActiveGesture =\n          (_contentGestureState === State.END ||\n            _contentGestureState === State.UNDETERMINED ||\n            _contentGestureState === State.CANCELLED) &&\n          (_handleGestureState === State.END ||\n            _handleGestureState === State.UNDETERMINED ||\n            _handleGestureState === State.CANCELLED);\n        if (!hasNoActiveGesture) {\n          return;\n        }\n\n        /**\n         * if the index is not equal to the current index,\n         * than the sheet position had changed and we trigger\n         * the `onChange` callback.\n         */\n        if (_animatedIndex !== animatedCurrentIndex.value) {\n          runOnJS(print)({\n            component: BottomSheet.name,\n            method: 'useAnimatedReaction::OnChange',\n            params: {\n              animatedCurrentIndex: animatedCurrentIndex.value,\n              animatedIndex: _animatedIndex,\n            },\n          });\n\n          animatedCurrentIndex.value = _animatedIndex;\n          runOnJS(handleOnChange)(_animatedIndex);\n        }\n\n        /**\n         * if index is `-1` than we fire the `onClose` callback.\n         */\n        if (_animatedIndex === -1 && _providedOnClose) {\n          runOnJS(print)({\n            component: BottomSheet.name,\n            method: 'useAnimatedReaction::onClose',\n            params: {\n              animatedCurrentIndex: animatedCurrentIndex.value,\n              animatedIndex: _animatedIndex,\n            },\n          });\n          runOnJS(_providedOnClose)();\n        }\n      },\n      [handleOnChange, _providedOnClose]\n    );\n\n    /**\n     * React to `index` prop to snap the sheet to the new position.\n     *\n     * @alias onIndexChange\n     */\n    useEffect(() => {\n      if (isAnimatedOnMount.value) {\n        handleSnapToIndex(_providedIndex);\n      }\n    }, [\n      _providedIndex,\n      animatedCurrentIndex,\n      isAnimatedOnMount,\n      handleSnapToIndex,\n    ]);\n    //#endregion\n\n    // render\n    print({\n      component: BottomSheet.name,\n      method: 'render',\n      params: {\n        animatedSnapPoints: animatedSnapPoints.value,\n        animatedCurrentIndex: animatedCurrentIndex.value,\n        providedIndex: _providedIndex,\n      },\n    });\n    return (\n      <BottomSheetProvider value={externalContextVariables}>\n        <BottomSheetInternalProvider value={internalContextVariables}>\n          <BottomSheetGestureHandlersProvider\n            gestureEventsHandlersHook={gestureEventsHandlersHook}\n          >\n            <BottomSheetBackdropContainer\n              key=\"BottomSheetBackdropContainer\"\n              animatedIndex={animatedIndex}\n              animatedPosition={animatedPosition}\n              backdropComponent={backdropComponent}\n            />\n            <BottomSheetContainer\n              key=\"BottomSheetContainer\"\n              shouldCalculateHeight={!$modal}\n              containerHeight={_animatedContainerHeight}\n              containerOffset={animatedContainerOffset}\n              topInset={topInset}\n              bottomInset={bottomInset}\n              detached={detached}\n              style={_providedContainerStyle}\n            >\n              <Animated.View style={containerStyle}>\n                <BottomSheetBackgroundContainer\n                  key=\"BottomSheetBackgroundContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  backgroundComponent={backgroundComponent}\n                  backgroundStyle={_providedBackgroundStyle}\n                />\n                <Animated.View\n                  pointerEvents=\"box-none\"\n                  style={contentMaskContainerStyle}\n                  accessible={_providedAccessible ?? undefined}\n                  accessibilityRole={_providedAccessibilityRole ?? undefined}\n                  accessibilityLabel={_providedAccessibilityLabel ?? undefined}\n                >\n                  <BottomSheetDraggableView\n                    key=\"BottomSheetRootDraggableView\"\n                    style={contentContainerStyle}\n                  >\n                    {typeof Content === 'function' ? <Content /> : Content}\n\n                    {footerComponent && (\n                      <BottomSheetFooterContainer\n                        footerComponent={footerComponent}\n                      />\n                    )}\n                  </BottomSheetDraggableView>\n                </Animated.View>\n                <BottomSheetHandleContainer\n                  key=\"BottomSheetHandleContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  handleHeight={animatedHandleHeight}\n                  enableHandlePanningGesture={enableHandlePanningGesture}\n                  enableOverDrag={enableOverDrag}\n                  enablePanDownToClose={enablePanDownToClose}\n                  overDragResistanceFactor={overDragResistanceFactor}\n                  keyboardBehavior={keyboardBehavior}\n                  handleComponent={handleComponent}\n                  handleStyle={_providedHandleStyle}\n                  handleIndicatorStyle={_providedHandleIndicatorStyle}\n                />\n              </Animated.View>\n              {/* <BottomSheetDebugView\n                values={{\n                  // topInset,\n                  // bottomInset,\n                  animatedSheetState,\n                  // animatedScrollableState,\n                  // animatedScrollableOverrideState,\n                  // isScrollableRefreshable,\n                  // animatedScrollableContentOffsetY,\n                  // keyboardState,\n                  // animatedIndex,\n                  // animatedCurrentIndex,\n                  // animatedPosition,\n                  animatedContainerHeight,\n                  animatedSheetHeight,\n                  animatedHandleHeight,\n                  animatedContentHeight,\n                  // // keyboardHeight,\n                  // isLayoutCalculated,\n                  // isContentHeightFixed,\n                  // isInTemporaryPosition,\n                }}\n              /> */}\n            </BottomSheetContainer>\n          </BottomSheetGestureHandlersProvider>\n        </BottomSheetInternalProvider>\n      </BottomSheetProvider>\n    );\n  }\n);\n\nconst BottomSheet = memo(BottomSheetComponent);\nBottomSheet.displayName = 'BottomSheet';\n\nexport default BottomSheet;\n"]}